{"ast":null,"code":"// Dashboard Utility Functions\nexport const exportToCSV = (data, filename = 'mediversal-data.csv') => {\n  const headers = Object.keys(data[0]);\n  const csvContent = [headers.join(','), ...data.map(row => headers.map(header => row[header]).join(','))].join('\\n');\n  const blob = new Blob([csvContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\nexport const compareData = (currentData, previousData, key) => {\n  if (!previousData || !currentData) return null;\n  const currentCount = currentData.filter(d => d[key]).length;\n  const previousCount = previousData.filter(d => d[key]).length;\n  const difference = currentCount - previousCount;\n  const percentage = previousCount === 0 ? 100 : difference / previousCount * 100;\n  return {\n    difference,\n    percentage,\n    isIncrease: difference > 0,\n    currentCount,\n    previousCount\n  };\n};\nexport const calculateStatistics = data => {\n  if (!data.length) return null;\n  const totalResponses = data.length;\n  const departments = [...new Set(data.map(d => d['What is your department?']))];\n  const averageSatisfaction = data.reduce((acc, curr) => {\n    const satisfaction = curr['Overall, how satisfied are you with your experience working at Mediversal?'];\n    return acc + (satisfaction ? 1 : 0);\n  }, 0) / totalResponses;\n  return {\n    totalResponses,\n    departments,\n    averageSatisfaction: (averageSatisfaction * 100).toFixed(2) + '%'\n  };\n};\nexport const filterDataByDateRange = (data, startDate, endDate) => {\n  if (!startDate || !endDate) return data;\n  return data.filter(item => {\n    const itemDate = new Date(item.timestamp || item.date);\n    return itemDate >= startDate && itemDate <= endDate;\n  });\n};\nexport const generateInsights = data => {\n  if (!data.length) return [];\n  const insights = [];\n\n  // Overall Satisfaction Insight\n  const satisfactionData = data.map(d => d['Overall, how satisfied are you with your experience working at Mediversal?']);\n  const satisfactionRate = satisfactionData.filter(d => d === 'Satisfied' || d === 'Very Satisfied').length / data.length * 100;\n  insights.push({\n    title: 'Overall Satisfaction',\n    value: satisfactionRate.toFixed(1) + '%',\n    trend: satisfactionRate > 75 ? 'positive' : satisfactionRate > 50 ? 'neutral' : 'negative'\n  });\n\n  // Work-Life Balance Insight\n  const workLifeData = data.map(d => d['How satisfied are you with your work-life balance?']);\n  const workLifeRate = workLifeData.filter(d => d === 'Satisfied' || d === 'Very Satisfied').length / data.length * 100;\n  insights.push({\n    title: 'Work-Life Balance',\n    value: workLifeRate.toFixed(1) + '%',\n    trend: workLifeRate > 75 ? 'positive' : workLifeRate > 50 ? 'neutral' : 'negative'\n  });\n\n  // Retention Insight\n  const retentionData = data.map(d => d['Overall, do you see yourself staying long-term at Mediversal?']);\n  const retentionRate = retentionData.filter(d => d === 'Likely' || d === 'Definitely').length / data.length * 100;\n  insights.push({\n    title: 'Retention Rate',\n    value: retentionRate.toFixed(1) + '%',\n    trend: retentionRate > 75 ? 'positive' : retentionRate > 50 ? 'neutral' : 'negative'\n  });\n  return insights;\n};","map":{"version":3,"names":["exportToCSV","data","filename","headers","Object","keys","csvContent","join","map","row","header","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","compareData","currentData","previousData","key","currentCount","filter","d","length","previousCount","difference","percentage","isIncrease","calculateStatistics","totalResponses","departments","Set","averageSatisfaction","reduce","acc","curr","satisfaction","toFixed","filterDataByDateRange","startDate","endDate","item","itemDate","Date","timestamp","date","generateInsights","insights","satisfactionData","satisfactionRate","push","title","value","trend","workLifeData","workLifeRate","retentionData","retentionRate"],"sources":["C:/Users/swaga/Downloads/mediversal-dashboard - Copy/src/utils/dashboardUtils.js"],"sourcesContent":["// Dashboard Utility Functions\r\nexport const exportToCSV = (data, filename = 'mediversal-data.csv') => {\r\n  const headers = Object.keys(data[0]);\r\n  const csvContent = [\r\n    headers.join(','),\r\n    ...data.map(row => headers.map(header => row[header]).join(','))\r\n  ].join('\\n');\r\n\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const link = document.createElement('a');\r\n  const url = URL.createObjectURL(blob);\r\n  \r\n  link.setAttribute('href', url);\r\n  link.setAttribute('download', filename);\r\n  link.style.visibility = 'hidden';\r\n  \r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nexport const compareData = (currentData, previousData, key) => {\r\n  if (!previousData || !currentData) return null;\r\n  \r\n  const currentCount = currentData.filter(d => d[key]).length;\r\n  const previousCount = previousData.filter(d => d[key]).length;\r\n  \r\n  const difference = currentCount - previousCount;\r\n  const percentage = previousCount === 0 ? 100 : (difference / previousCount) * 100;\r\n  \r\n  return {\r\n    difference,\r\n    percentage,\r\n    isIncrease: difference > 0,\r\n    currentCount,\r\n    previousCount\r\n  };\r\n};\r\n\r\nexport const calculateStatistics = (data) => {\r\n  if (!data.length) return null;\r\n  \r\n  const totalResponses = data.length;\r\n  const departments = [...new Set(data.map(d => d['What is your department?']))];\r\n  const averageSatisfaction = data.reduce((acc, curr) => {\r\n    const satisfaction = curr['Overall, how satisfied are you with your experience working at Mediversal?'];\r\n    return acc + (satisfaction ? 1 : 0);\r\n  }, 0) / totalResponses;\r\n  \r\n  return {\r\n    totalResponses,\r\n    departments,\r\n    averageSatisfaction: (averageSatisfaction * 100).toFixed(2) + '%'\r\n  };\r\n};\r\n\r\nexport const filterDataByDateRange = (data, startDate, endDate) => {\r\n  if (!startDate || !endDate) return data;\r\n  \r\n  return data.filter(item => {\r\n    const itemDate = new Date(item.timestamp || item.date);\r\n    return itemDate >= startDate && itemDate <= endDate;\r\n  });\r\n};\r\n\r\nexport const generateInsights = (data) => {\r\n  if (!data.length) return [];\r\n  \r\n  const insights = [];\r\n  \r\n  // Overall Satisfaction Insight\r\n  const satisfactionData = data.map(d => d['Overall, how satisfied are you with your experience working at Mediversal?']);\r\n  const satisfactionRate = (satisfactionData.filter(d => d === 'Satisfied' || d === 'Very Satisfied').length / data.length) * 100;\r\n  insights.push({\r\n    title: 'Overall Satisfaction',\r\n    value: satisfactionRate.toFixed(1) + '%',\r\n    trend: satisfactionRate > 75 ? 'positive' : satisfactionRate > 50 ? 'neutral' : 'negative'\r\n  });\r\n  \r\n  // Work-Life Balance Insight\r\n  const workLifeData = data.map(d => d['How satisfied are you with your work-life balance?']);\r\n  const workLifeRate = (workLifeData.filter(d => d === 'Satisfied' || d === 'Very Satisfied').length / data.length) * 100;\r\n  insights.push({\r\n    title: 'Work-Life Balance',\r\n    value: workLifeRate.toFixed(1) + '%',\r\n    trend: workLifeRate > 75 ? 'positive' : workLifeRate > 50 ? 'neutral' : 'negative'\r\n  });\r\n  \r\n  // Retention Insight\r\n  const retentionData = data.map(d => d['Overall, do you see yourself staying long-term at Mediversal?']);\r\n  const retentionRate = (retentionData.filter(d => d === 'Likely' || d === 'Definitely').length / data.length) * 100;\r\n  insights.push({\r\n    title: 'Retention Rate',\r\n    value: retentionRate.toFixed(1) + '%',\r\n    trend: retentionRate > 75 ? 'positive' : retentionRate > 50 ? 'neutral' : 'negative'\r\n  });\r\n  \r\n  return insights;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}